y  = A * x + B

4959.113 = A * 1 + B
4752.483  = A * 0.971 + B

(4959.113 - 4752.483)/(1 - 0.971) = A
206,63 / 0,029 = 7125,172 = A

B < 0


kFrqLowLimit  = A * 0 + B 					(1)
23* kMaxFrqFrom / 24 = A * (1 - delta) + B	(2)
kMaxFrqFrom = A * 1  + B					(3)

(1) -> (3)

kMaxFrqFrom = A + kFrqLowLimit				(3')

(2)

23* kMaxFrqFrom / 24 = A * (1 - delta) + kFrqLowLimit	(2')

A = ((23* kMaxFrqFrom / 24) - kFrqLowLimit)/(1 - delta)	(2'')

(2'') -> (3')

kMaxFrqFrom =  (- kFrqLowLimit * delta)/((1 - delta) - (23 / 24))


kSmallestDelta = 0.003846

kMaxFrqFrom = -1.662977 | kMinFrqTo = -52219.219633 
kMinFrq = -8969.619790 | kMaxFrq = 5310.757234 | kLimitMinLineAcoeff = 57529.976867 | kLimitMinLineBcoeff = -52219.219633 


==========================

test if MaxDeltaX complains for case with MaxTotalY, MinTotalY

LinExtreme (x) = kAExtereme * x + kBExtereme (11)

kBExtereme = kMinTotalY (12)
kAExtereme = kMaxTotalY - kBExtereme  (13)
kAExtereme = kMaxTotalY - kMinTotalY  (13')

/*
if(kMaxTotalY - kMinDeltaY <= kAExtereme * (1 - kMaxDeltaX) + kBExtereme)
{
	//;ok
}
else
{
	//;wrong
}

(kMaxTotalY - kMinDeltaY - kBExtereme) / kAExtereme <=  1 - kMaxDeltaX

kMaxDeltaX <=  1 - ((kMaxTotalY - kMinDeltaY - kBExtereme) / kAExtereme)
*/


kMinTotalY = 1
kMaxTotalY = 127

kBExtereme = 1
kAExtereme = 126


f(x1 - x2) = kAExtereme * (x1 - x2) + kBExtereme = 126 * (x1 - x2) + 1

f(x1) = kAExtereme * x1 + kBExtereme = 126 * x1 + 1
f(x2) = kAExtereme * x2 + kBExtereme = 126 * x2 + 1

x1 = 2
x2 = 1

f(x1 - x2) = 127

f(x1) = 126 * 2 + 1 = 253
f(x2) = 126 * 1 + 1 = 127

f(x1) - f(x2) = 126 !!! f(x1 - x2) - kBExtereme

f(x1) - f(x2) = kAExtereme * (x1 - x2)

f(x1) - f(x2) - f(x1 - x2) = - kBExtereme

f(x1) - f(x2) = f(x1 - x2) - kBExtereme
kMinYDelta = f(kMinDeltaX) - kBExtereme
kMinYDelta = kAExtereme * kMinDeltaX
kMinDeltaX = kMinYDelta / kAExtereme
kCurrDelta >= kMinDeltaX



kMinTotalY				init 1
kMaxTotalY				init 127
kMinYDeltaScaled		init 1
	
kMaxCurrY		=		get_different_distrib_value_k(0, 1, kMinTotalY+kMinYDeltaScaled, kMaxTotalY-kMinYDeltaScaled, 1)
;y = A * x + B
;kMaxCurrY = A * 1 + B
;kMaxCurrY - kMinYDeltaScaled = A * (1 - kSmallestDelta) + B
;A = kMinYDeltaScaled / kSmallestDelta
;B = kMaxCurrY - A
;kMinCurrYLowLimit = B
kMinCurrY		=		get_different_distrib_value_k(0, 1, kMinTotalY, (kMaxCurrY - kMinYDeltaScaled / kSmallestDelta), 1)
		
		
kSmallestDelta = 0.019496

kMinCurrY = -9.700690 | kMaxCurrY = 25.471889